<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Command</key>
	<string>#!/bin/bash
# 時間単位のスクリプト
[ -f "$HOME/.bashrc" ] &amp;&amp; source "$HOME/.bashrc"
[ -f "$HOME/.zshrc" ] &amp;&amp; source "$HOME/.zshrc"

# 場所のURL（日本語表記にしたい場合は/en/を/ja/に書き換える）
WEATHER_URL=${WEATHER_URL:='https://www.accuweather.com/en/jp/koto-ku/221230/weather-forecast/221230'}

# 何時間分？
NUM_HOUR=24
# 何時間おき？
SKIP=2
# 何段？
COLUM=2
# 各段の間の改行数
NLF=5
# 表示桁数
MY_STRLN=15
# 見出しの文字数
MY_INDEX=9
# 気温、降水確率、雨量、風速、フレーズを表示する？（1 表示する、0 表示しない）
F_TEMP=1
F_PRECIP=1
F_RAIN=1
F_WIND=1
F_PHRASE=0
# 天気アイコンを取得する？（1 取得する、0 取得しない）
F_ICON=1
# AMとPMの色  30 黒、31 赤、32 緑、33 黄、34 青、35 マゼンタ、36 シアン、37 白、0 デフォルト
COLOR_AM='47;31;1'
COLOR_PM='47;34;1'
# 見出しの色
COLOR_CP='0'
# 天気フレーズの色
COLOR_PHRASE='3'
# 日本語対応の等幅フォント？（1 対応【Osaka-等幅、Ricty、Myrica Mなど】、0 非対応【Andale Mono、Courier、Menlo、Monacoなど】）
F_JFNT=1

# 設定
[ $F_JFNT -eq 1 ] &amp;&amp; JFNT='℃' || JFNT='°'

# 文字数取得用関数
mystrln() {
  local LANG=ja_JP.UTF-8
  local dn=0 mb=0
  for ((j = 0; j &lt; $((${#1})); ++j))
  do
    [ $(/bin/echo -n ${1:$j:1} | wc -c) -le 1 ] ; fd=$?
    dn=$(($dn+1+$fd))
    [ $dn -gt $2 ] &amp;&amp; break
    mb=$(($mb+$fd))
  done
  printf -v $3 "%s" "`/bin/echo -n ${1:0:$j}`"
  printf -v $4 "%d" $(($mb+$2))
} 

# データ表示用関数
display_data() {
  mystr=$(echo "$1" | perl -C -MEncode -pe 's/&amp;#x([0-9A-F]{2,4});/chr(hex($1))/ge')
  mystrln "$mystr" $MY_INDEX S1 S2
  printf "\033[0;${COLOR_CP}m%-*s\033[0m" $S2 "$S1"
  for i in $(seq 0 $SKIP $(($nt-1)))
  do
    mystrln "$(eval echo '${'$2'[$(($i+$n))]}' | perl -C -MEncode -pe 's/&amp;#x([0-9A-F]{2,4});/chr(hex($1))/ge')" $MY_STRLN S1 S2
    printf "%-*s" $S2 "$S1"
  done
  echo
}

# 元データ取得
USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X)'
WEATHER_DATA0=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/hourly-weather-forecast})
WEATHER_DATA1=$(curl -A "$USER_AGENT" --silent ${WEATHER_URL/weather-forecast/hourly-weather-forecast}"?day=2")

# 表示する項目名を取得
LOCALE_TEMP=' '
LOCALE_PRECIP=''

if [ "$(echo $WEATHER_URL | grep 'com/en/')" ]; then
	LOCALE_RAIN="Rain"
	LOCALE_WIND="Wind"
elif [ "$(echo $WEATHER_URL | grep 'com/ja/')" ]; then
	LOCALE_RAIN="&amp;#x96E8;"
	LOCALE_WIND="&amp;#x98A8;&amp;#x5411;"
else
	F_RAIN=0
	F_WIND=0
fi

# 時刻・気温・降水確率・雨量・風速・天気を配列変数として取得
_IFS="$IFS";IFS=$'\n'
HOUR_TIME=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A2 'class="date"' | grep 'div' | sed -e 's/&lt;[^&gt;]*&gt;//g'))
HOUR_TEMP=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep 'class="temp metric"'| sed -e 's/&lt;[^&gt;]*&gt;//g' | cut -d\&amp; -f1 | sed -E s/$/$JFNT/))
HOUR_PRECIP=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -A2 '&lt;div class="precip"&gt;' | grep \% | grep -v '\-\-'))
HOUR_RAIN=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep -e '&lt;div class="hourly-content-container"&gt;' -e "&gt;$LOCALE_RAIN&lt;" | tr -d '\t' | tr -d '\n' | perl -pe 's/&lt;div class="hourly-content-container"&gt;/\n /g' | sed '1d' | sed "s/$LOCALE_RAIN//g" | sed -e 's/&lt;[^&gt;]*&gt;//g'))
HOUR_WIND=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep "$LOCALE_WIND&lt;" | sed -e 's/&lt;[^&gt;]*&gt;//g' | tr -d '\t' | sed -e "s/$LOCALE_WIND//g"))
HOUR_PHRASE=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep '&lt;div class="phrase"&gt;' | sed -e 's/&lt;[^&gt;]*&gt;//g' | grep -v '\-\-'))
IFS="$_IFS"

# 天気アイコンのナンバーをゼロパディングし配列変数として取得
HOUR_ICON=($(echo "$WEATHER_DATA0" "$WEATHER_DATA1" | grep 'svg class="icon"' | awk -F'/images/weathericons/' '{print $2}' | cut -d. -f1 | awk '{printf "%02d\n", $1}' ))

# 時刻・天気を表示
n=0
LNAP="/hi/\|/ar/\|/el/\|/ko/\|/ms/\|/bn/\|/ur/\|/kn/\|/te/\|/mr/\|/pa/\|/zh\|/en/"
L_AM="AM|पूर्वाह्न|π.μ.|오전|PG|পূর্বাহ্|ಪೂರ್ವಾಹ್ನ|म.पू.|ਪੂ.ਦੁ.|上午|ص|قبل دوپہر"
L_PM="PM|अपराह्|μ.μ.|오후|PTG|অপরাহ্ণ|ಅಪರಾಹ್ನ|PM|म.उ.|ਬਾ.ਦੁ.|下午|م|بعد دوپہر"
for (( l=0; l &lt; $COLUM; ++l))
do
  for (( m=0; m &lt; $NLF; ++m)); do echo; done
  [[ l -eq 0 ]] &amp;&amp; nt=$(echo "scale=1; ($NUM_HOUR+0.9)/$COLUM" | bc | awk '{printf("%d",$1 + 0.5)}') || nt=$(($NUM_HOUR/$COLUM)) 
  # 時刻を左揃えの指定した桁数で表示
  printf "%*s" $MY_INDEX " "
  for i in $(seq 0 $SKIP $(($nt-1)))
  do
    MY_TIME=$(echo "${HOUR_TIME[$(($i+$n))]}" | perl -C -MEncode -pe 's/&amp;#x([0-9A-F]{2,4});/chr(hex($1))/ge')
    mystrln "$MY_TIME" $MY_STRLN S1 S2
    if [ "$(echo $WEATHER_URL | grep $LNAP)" ]; then
      printf "%-*s" $S2 "$S1" | sed -E "/$L_AM/s/^/$(printf "\033[0;${COLOR_AM}m")/" | sed -E "/$L_PM/s/^/$(printf "\033[0;${COLOR_PM}m")/" | sed -E 's/$/'$(printf "\033[0m")'/' | tr -d '\n'
    else
      printf "%-*s" $S2 "$S1" | perl -pe 's/((?&lt;![0-9])([0-9])(?![0-9])|0[0-9]|1[0-1])/'$(printf "\033[0;${COLOR_AM}m")'\1/' | sed -E 's/(1[2-9]|2[0-3])/'$(printf "\033[0;${COLOR_PM}m")'&amp;/' | sed -E 's/$/'$(printf "\033[0m")'/' | tr -d '\n'
    fi
  done
  echo
  # 気温、降水確率、雨量、風向を左揃えの指定した桁数で表示
  [ $F_TEMP -eq 1 ] &amp;&amp; display_data "$LOCALE_TEMP" 'HOUR_TEMP'
  [ $F_PRECIP -eq 1 ] &amp;&amp; display_data "$LOCALE_PRECIP" 'HOUR_PRECIP'
  [ $F_RAIN -eq 1 ] &amp;&amp; display_data "$LOCALE_RAIN" 'HOUR_RAIN'
  [ $F_WIND -eq 1 ] &amp;&amp; display_data "$LOCALE_WIND" 'HOUR_WIND'
  # 天気を左揃えの指定した桁数かつ4段で表示
  if [ $F_PHRASE -eq 1 ]; then
    for (( k=1; k &lt; 5; ++k))
    do
      printf "%-*s" $MY_INDEX " "
      for i in $(seq 0 $SKIP $(($nt-1)))
      do
        MY_PHRASE=$(echo "${HOUR_PHRASE[$(($i+$n))]}" | perl -C -MEncode -pe 's/&amp;#x([0-9A-F]{2,4});/chr(hex($1))/ge')
        mystrln "$(echo "$MY_PHRASE" | awk -v "knum=$k" '{printf "%s", $knum}')" $MY_STRLN S1 S2
        printf "\033[0;${COLOR_PHRASE}m%-*s\033[0m" $S2 "$S1"
      done
      echo
    done
  fi
  n=$(($n+$i+$SKIP))
done

# 天気アイコンを取得して保存
if [ $F_ICON -eq 1 ]; then
  for (( i=0; i &lt; $(($NUM_HOUR/$SKIP+1)); ++i))
  do
    echo "https://vortex.accuweather.com/adc2010/images/slate/icons/${HOUR_ICON[$(($i*$SKIP))]}-m.png" | xargs curl --silent -o /tmp/weather_hour_$i.png
  done

fi
# 画像GeekletをRefleshする
osascript &lt;&lt;EOT
  tell application "GeekTool Helper"
    tell image geeklets to refresh
  end tell
EOT
</string>
	<key>DropShadow</key>
	<false/>
	<key>FailureImage</key>
	<data>
	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
	</data>
	<key>FontFamily</key>
	<string>Osaka-Mono</string>
	<key>FontSize</key>
	<real>13</real>
	<key>GeekletFrame</key>
	<string>{{20, 635}, {756, 391}}</string>
	<key>HasShadow</key>
	<false/>
	<key>Identifier</key>
	<string>org.tynsoe.geeklet.shell</string>
	<key>Name</key>
	<string>06_hour</string>
	<key>RefreshInterval</key>
	<integer>600</integer>
	<key>SetLocale</key>
	<true/>
	<key>SuccessImage</key>
	<data>
	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
	</data>
	<key>TextColor</key>
	<data>
	BAtzdHJlYW10eXBlZIHoA4QBQISEhAdOU0NvbG9yAISECE5TT2JqZWN0AIWEAWMBhARm
	ZmZmAYNS/n8/g27/fz+DZfwZP4Y=
	</data>
	<key>TextStrikethrough</key>
	<integer>0</integer>
	<key>TextUnderline</key>
	<integer>0</integer>
	<key>Timeout</key>
	<integer>120</integer>
</dict>
</plist>
